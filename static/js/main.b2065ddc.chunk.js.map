{"version":3,"sources":["controllers/openweather/api.js","utils/helpers/formatters.js","utils/helpers/converters.js","components/WeatherState.jsx","components/WeatherDays.jsx","components/WeatherTracker.jsx","components/AppContainer.jsx","components/SidebarNavCont.jsx","components/SidebarNavState.jsx","assets/images/sunny.jpg","components/AppSidebar.jsx","components/AppSearch.jsx","App.js","reportWebVitals.js","index.js"],"names":["api_key","process","getByLatLng","lat","lng","type","axios","get","then","res","data","catch","err","console","error","formatDay","fullYear","properDate","replaceAll","d","Date","getDayOfWeek","getDay","getDayOfMonth","getDate","toCelcius","temp","Math","floor","toFahrenheit","convertedToCelcius","WeatherState","this","props","state","WeatherDays","latlngdata","useState","weatherForecast","setWeatherForecast","useEffect","theType","a","list","filter","x","dt_txt","split","setApiData","log","appearTop","useSpring","from","position","top","opacity","to","div","className","style","marginBottom","map","item","index","weather","icon","main","WeatherTracker","weatherData","windSpeed","setWindSpeed","humidity","setHumidty","setLat","setLng","pressure","setPressure","wind","speed","coord","lon","AppContainer","passlatlng","showData","SidebarNavCont","passfunction","latlng","getLatlng","findGeolocation","cb","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","processProperData","setTimeout","fetch","json","response","theCountry","country","prov","textDecoration","marginRight","size","onClick","SidebarNavState","description","location","days","theDate","day","appearBounceTop","bottom","fill","AppSidebar","currLocation","handleCurrCountry","weatherBg","setWeatherBg","getWeatherBg","bg","assortBg","Clouds","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","fade","backgroundImage","AppSearch","history","useHistory","address","setAddress","locInputState","setlocInputState","handleSelect","value","geocodeByAddress","result","getLatLng","push","clearInput","handleInputFocus","borderRight","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","onFocus","onBlur","placeholder","length","suggestion","formattedSuggestion","mainText","secondaryText","backgroundColor","active","color","cursor","App","setLatlng","currCountry","setCurrCountry","currWeather","setCurrWeather","handleSetLatlng","theData","Webfont","load","google","families","background","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2065ddc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api_key = process.env.REACT_APP_OPENWEATHER_KEY;\r\n\r\n/* \r\n! Need to create current hh:mm:ss hour to selected UTC TIME FORMAT\r\n*/\r\n/* function formatHour(){\r\n\r\n} */\r\n\r\nexport function getByCityName(loc, type) {\r\n  if (type === \"weather\") {\r\n    return axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${loc}&appid=${api_key}`\r\n      )\r\n      .then((res) => res.data)\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  if (type === \"forecast\") {\r\n    return axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${loc}&appid=${api_key}`\r\n      )\r\n      .then((res) => res.data)\r\n      .catch((err) => console.error(err));\r\n  }\r\n}\r\n\r\nexport function getByLatLng(lat, lng, type) {\r\n  if (type === \"weather\") {\r\n    return axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${api_key}`\r\n      )\r\n      .then((res) => res.data)\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  if (type === \"forecast\") {\r\n    return axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lng}&appid=${api_key}`\r\n      )\r\n      .then((res) => res.data)\r\n      .catch((err) => console.error(err));\r\n  }\r\n}\r\n","export function formatDay(fullYear) {\r\n  let properDate = fullYear.replaceAll(\"-\", \",\");\r\n  let d = new Date(properDate);\r\n  const dayNames = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  const getDayOfWeek = dayNames[d.getDay()];\r\n  const getDayOfMonth = d.getDate();\r\n\r\n  return `${getDayOfWeek}, ${getDayOfMonth}`;\r\n}\r\n","export function toCelcius(temp) {\r\n  return Math.floor(temp - 273.15);\r\n}\r\n\r\nexport function toFahrenheit(temp) {\r\n  const convertedToCelcius = Math.floor(temp - 273.15);\r\n  return Math.floor(convertedToCelcius * 1.8 + 32);\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  WiCloudy,\r\n  WiDaySunny,\r\n  WiDayShowers,\r\n  WiShowers,\r\n  WiNightClear,\r\n  WiThunderstorm,\r\n  WiSnowflakeCold,\r\n  WiDust,\r\n  WiDayCloudy,\r\n  WiCloud,\r\n  WiNightAltPartlyCloudy,\r\n  WiRaindrop,\r\n} from \"react-icons/wi\";\r\n\r\nexport default function WeatherState({ state } = this.props) {\r\n  if (state) {\r\n    if (state === \"01d\") return <WiDaySunny />;\r\n    if (state === \"01n\") return <WiNightClear />;\r\n    if (state === \"11d\") return <WiThunderstorm />;\r\n    if (state === \"09d\") return <WiShowers />;\r\n    if (state === \"10d\") return <WiDayShowers />;\r\n    if (state === \"13d\") return <WiSnowflakeCold />;\r\n    if (state === \"50d\") return <WiDust />;\r\n    if (state === \"02d\") return <WiDayCloudy />;\r\n    if (state === \"03d\") return <WiCloudy />;\r\n    if (state === \"04d\") return <WiCloud />;\r\n    if (state === \"04n\" || state === \"03n\" || state === \"02n\")\r\n      return <WiNightAltPartlyCloudy />;\r\n    if (state === \"10n\") return <WiRaindrop />;\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { formatDay } from \"../utils/helpers/formatters\";\r\nimport { getByLatLng } from \"../controllers/openweather/api\";\r\nimport { toCelcius, toFahrenheit } from \"../utils/helpers/converters\";\r\nimport WeatherState from \"./WeatherState\";\r\n\r\n// React Spring\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nexport default function WeatherDays({ latlngdata } = this.props) {\r\n  const [weatherForecast, setWeatherForecast] = useState(null);\r\n  useEffect(() => {\r\n    async function setApiData(lat, lng, theType) {\r\n      return getByLatLng(lat, lng, theType).then((res) => {\r\n        // console.log(res);\r\n        setWeatherForecast(\r\n          // Get data with only 12:00:00 on dt_txt object\r\n          res.list.filter((x) => x.dt_txt.split(\" \")[1] === \"15:00:00\")\r\n        );\r\n      });\r\n    }\r\n\r\n    setApiData(latlngdata.lat, latlngdata.lng, \"forecast\");\r\n    // await console.log(weatherForecast);\r\n  }, [latlngdata.lat, latlngdata.lng]);\r\n\r\n  useEffect(() => {\r\n    console.log(weatherForecast);\r\n  }, [weatherForecast]);\r\n\r\n  const appearTop = useSpring({\r\n    from: {\r\n      position: \"relative\",\r\n      top: \"-150px\",\r\n      opacity: 0,\r\n    },\r\n    to: {\r\n      position: \"relative\",\r\n      top: \"0\",\r\n      opacity: 1,\r\n    },\r\n  });\r\n\r\n  // If weatherForecast Data is received. Properly render forecast\r\n  if (weatherForecast) {\r\n    return (\r\n      <animated.div className=\"weather-days\" style={appearTop}>\r\n        <h1 style={{ marginBottom: \"15px\" }}>Forecast - 5 day / 3 hours</h1>\r\n        <div className=\"weather-days__container\">\r\n          {weatherForecast &&\r\n            weatherForecast.map((item, index) => (\r\n              <div className=\"weather-days__item\" key={index}>\r\n                <h2>{formatDay(item.dt_txt.split(\" \")[0])}</h2>\r\n                <WeatherState state={item.weather[0].icon} />\r\n                <ul>\r\n                  <li>{toCelcius(item.main.temp)}°C</li>\r\n                  <li>{toFahrenheit(item.main.temp)}°F</li>\r\n                </ul>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </animated.div>\r\n    );\r\n  }\r\n\r\n  // Else just render a loading message...\r\n  return (\r\n    <animated.div className=\"weather-days\" style={appearTop}>\r\n      <h1 style={{ marginBottom: \"15px\" }}>Forecast - 5 day / 3 hours</h1>\r\n      <div className=\"weather-days__container\">Loading...</div>\r\n    </animated.div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nexport default function WeatherTracker({ weatherData } = this.props) {\r\n  const [windSpeed, setWindSpeed] = useState(null);\r\n  const [humidity, setHumidty] = useState(null);\r\n  const [lat, setLat] = useState(null);\r\n  const [lng, setLng] = useState(null);\r\n  const [pressure, setPressure] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (weatherData) {\r\n      function setWeatherData() {\r\n        setWindSpeed(weatherData.wind.speed);\r\n        setHumidty(weatherData.main.humidity);\r\n        setLat(weatherData.coord.lat);\r\n        setLng(weatherData.coord.lon);\r\n        setPressure(weatherData.main.pressure);\r\n      }\r\n\r\n      setWeatherData();\r\n    }\r\n  }, [weatherData]);\r\n\r\n  const appearTop = useSpring({\r\n    from: {\r\n      position: \"relative\",\r\n      top: \"-150px\",\r\n      opacity: 0,\r\n    },\r\n    to: {\r\n      position: \"relative\",\r\n      top: \"0\",\r\n      opacity: 1,\r\n    },\r\n  });\r\n\r\n  if (weatherData) {\r\n    return (\r\n      <animated.div style={appearTop} className=\"weather-tracker\">\r\n        <h1>Weather Tracker</h1>\r\n        <div className=\"weather-tracker__container\">\r\n          <div className=\"status-wind weather-tracker__inner-item\">\r\n            <p className=\"data-title\">Wind Status</p>\r\n            <p className=\"data-text\">\r\n              <strong>{windSpeed}</strong>&nbsp;mph\r\n            </p>\r\n          </div>\r\n          <div className=\"status-humidity weather-tracker__inner-item\">\r\n            <p className=\"data-title\">Humidity</p>\r\n            <p className=\"data-text\">\r\n              <strong>{humidity}</strong>&nbsp;%\r\n            </p>\r\n          </div>\r\n          <div className=\"status-visibility weather-tracker__inner-item\">\r\n            <p className=\"data-title\">Coordinates</p>\r\n            <p className=\"data-text\">\r\n              lat&nbsp;\r\n              <strong>{lat}</strong>\r\n              <br />\r\n              lon&nbsp;<strong>{lng}</strong>\r\n            </p>\r\n          </div>\r\n          <div className=\"status-pressure weather-tracker__inner-item\">\r\n            <p className=\"data-title\">Air Pressure</p>\r\n            <p className=\"data-text\">\r\n              <strong>{pressure}</strong>&nbsp;mb\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </animated.div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <animated.div style={appearTop} className=\"weather-tracker\">\r\n      <h1>Weather Tracker</h1>\r\n      <div>\r\n        <p>Loading...</p>\r\n      </div>\r\n    </animated.div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport WeatherDays from \"../components/WeatherDays\";\r\nimport WeatherTracker from \"../components/WeatherTracker\";\r\n\r\nexport default function AppContainer(\r\n  { passlatlng, weatherData, showData } = this.props\r\n) {\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"app-container__inner\">\r\n        {passlatlng && <WeatherDays latlngdata={passlatlng} />}\r\n\r\n        <WeatherTracker weatherData={weatherData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BiCurrentLocation } from \"react-icons/bi\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function SidebarNavCont({ passfunction } = this.props) {\r\n  const [latlng, getLatlng] = useState(null);\r\n  const [country, setCountry] = useState(null);\r\n\r\n  /* Ask current location */\r\n\r\n  function findGeolocation(cb) {\r\n    navigator.geolocation.getCurrentPosition(function (pos) {\r\n      getLatlng({ lat: pos.coords.latitude, lng: pos.coords.longitude });\r\n      console.log(\"geolocation set\");\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    findGeolocation();\r\n  }, []);\r\n\r\n  function processProperData() {\r\n    setTimeout(() => {\r\n      fetch(`https://geocode.xyz/${latlng.lat},${latlng.lng}?json=1`)\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n          passfunction({\r\n            latlng: latlng,\r\n            theCountry: `${response.country}, ${response.prov}`,\r\n          });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"AppSidebar__nav-controls\">\r\n      <div className=\"app-search__form\">\r\n        <div className=\"form-container\">\r\n          <div className=\"loc-input-wrapper\">\r\n            <Link\r\n              to=\"/search\"\r\n              className=\"search-btn\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <BsSearch style={{ marginRight: \"8px\" }} />\r\n              Search Location\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button className=\"loc-btn nav-btn\">\r\n        <BiCurrentLocation size=\"1.5em\" onClick={() => processProperData()} />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { toCelcius } from \"../utils/helpers/converters\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { MdLocationOn } from \"react-icons/md\";\r\nimport WeatherState from \"./WeatherState\";\r\n\r\nexport default function SidebarNavState(\r\n  { main, temp, description, icon, location } = this.props\r\n) {\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const theDate = new Date();\r\n  const day = theDate.getDay();\r\n\r\n  const appearBounceTop = useSpring({\r\n    from: {\r\n      bottom: \"13%\",\r\n      opacity: 0,\r\n    },\r\n    to: {\r\n      bottom: \"10%\",\r\n      opacity: 1,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div style={appearBounceTop} className=\"AppSidebar__weather-state\">\r\n      <div className=\"state__condition\">\r\n        {/* <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"\" /> */}\r\n        <WeatherState style={{ fill: \"#fff\" }} state={icon} />\r\n        <div className=\"state__condition__temp-and-day\">\r\n          <p>Today - {days[day]}</p>\r\n          <span>{toCelcius(temp)}°C</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"state__info\">\r\n        <h1>{main}</h1>\r\n        {location && (\r\n          <p>\r\n            <MdLocationOn />\r\n            {location}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </animated.div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/sunny.1cfc538f.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport SidebarNavCont from \"./SidebarNavCont\";\r\nimport SidebarNavState from \"./SidebarNavState\";\r\nimport Sunny from \"../assets/images/sunny.jpg\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nexport default function AppSidebar(\r\n  { weatherData, passfunction, currLocation, handleCurrCountry } = this.props\r\n) {\r\n  const [weatherBg, setWeatherBg] = useState(null);\r\n\r\n  function getWeatherBg(type) {\r\n    var bg;\r\n    var assortBg = {\r\n      Clouds: function () {\r\n        bg =\r\n          \"https://images.unsplash.com/photo-1548266652-99cf27701ced?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1275&q=80\";\r\n      },\r\n      Thunderstorm: function () {\r\n        bg =\r\n          \"https://images.unsplash.com/photo-1492011221367-f47e3ccd77a0?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1234&q=80\";\r\n      },\r\n      Drizzle: function () {\r\n        bg =\r\n          \"https://images.unsplash.com/photo-1573151892117-efd764c9949f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1275&q=80\";\r\n      },\r\n      Rain: function () {\r\n        bg =\r\n          \"https://images.unsplash.com/photo-1501691223387-dd0500403074?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=882&q=80\";\r\n      },\r\n      Snow: function () {\r\n        bg =\r\n          \"https://images.unsplash.com/photo-1486944670663-e0a2ea5018eb?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1234&q=80\";\r\n      },\r\n      Atmosphere: function () {\r\n        bg =\r\n          \"https://images.unsplash.com/photo-1598719074256-89351407950d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1275&q=80\";\r\n      },\r\n      Clear: function () {\r\n        bg =\r\n          \"https://images.unsplash.com/photo-1495110823793-aa4ed8127d6e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1258&q=80\";\r\n      },\r\n    };\r\n    (assortBg[type] || assortBg[\"Clear\"])();\r\n\r\n    return bg;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // setWeatherBg(getWeatherBg(main));\r\n    // var str = 'bar.' + weatherData.weather[0].main;\r\n    // console.log(getWeatherBg(weatherDatamain));\r\n    if (weatherData) {\r\n      setWeatherBg(getWeatherBg(weatherData.weather[0].main));\r\n    }\r\n  }, [weatherData]);\r\n\r\n  const fade = useSpring({\r\n    from: {\r\n      opacity: 0,\r\n    },\r\n    to: {\r\n      opacity: 1,\r\n    },\r\n  });\r\n  if (weatherData) {\r\n    const { main, description, icon } = weatherData.weather[0];\r\n    const { temp } = weatherData.main;\r\n    return (\r\n      <animated.div className=\"sidebar-container\" style={fade}>\r\n        <div\r\n          className=\"AppSidebar\"\r\n          style={{ backgroundImage: `url(${weatherBg})` }}\r\n        >\r\n          <SidebarNavCont\r\n            passfunction={passfunction}\r\n            handleCurrCountry={handleCurrCountry}\r\n            weatherData={weatherData}\r\n          />\r\n          <SidebarNavState\r\n            main={main}\r\n            description={description}\r\n            temp={temp}\r\n            icon={icon}\r\n            location={currLocation}\r\n          />\r\n        </div>\r\n      </animated.div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <animated.div className=\"sidebar-container\">\r\n      <div className=\"AppSidebar\">\r\n        <SidebarNavCont />\r\n        {/* <button onClick={(e) => callApi(e)}>Test Api</button> */}\r\n        <div className=\"AppSidebar__weather-state\">\r\n          <h1>Loading...</h1>\r\n        </div>\r\n        <div className=\"AppSidebar__weather-visual\"></div>\r\n      </div>\r\n    </animated.div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nexport default function AppSearch(props) {\r\n  const history = useHistory();\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n  const [locInputState, setlocInputState] = useState(false);\r\n\r\n  const handleSelect = async (value) => {\r\n    const result = await geocodeByAddress(value);\r\n    const latlng = await getLatLng(result[0]);\r\n    console.log(value);\r\n    await setAddress(value);\r\n    await props.passfunction({ latlng: latlng, theCountry: value });\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setAddress(\"\");\r\n  };\r\n\r\n  const handleInputFocus = () => {\r\n    setlocInputState(!locInputState);\r\n  };\r\n\r\n  const fade = useSpring({\r\n    from: {\r\n      opacity: 0,\r\n      borderRight: \"1px solid #ccc\",\r\n    },\r\n    to: {\r\n      opacity: 1,\r\n      borderRight: \"1px solid #ccc\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div className=\"sidebar-container\" style={fade}>\r\n      <div className=\"app-search\">\r\n        <div className=\"AppSidebar__nav-controls\">\r\n          <div className=\"app-search__form\">\r\n            <PlacesAutocomplete\r\n              value={address}\r\n              onChange={setAddress}\r\n              onSelect={handleSelect}\r\n            >\r\n              {({\r\n                getInputProps,\r\n                suggestions,\r\n                getSuggestionItemProps,\r\n                loading,\r\n              }) => (\r\n                <div className=\"form-container\">\r\n                  <div\r\n                    className={\r\n                      locInputState\r\n                        ? \"loc-input-wrapper search is--focused\"\r\n                        : \"loc-input-wrapper search\"\r\n                    }\r\n                    onFocus={handleInputFocus}\r\n                    onBlur={handleInputFocus}\r\n                  >\r\n                    <input\r\n                      {...getInputProps({\r\n                        placeholder: \"I.e Philippines\",\r\n                      })}\r\n                    />\r\n                    <IoClose\r\n                      className={address.length > 0 ? \"is--visible\" : null}\r\n                      onClick={clearInput}\r\n                    />\r\n                  </div>\r\n                  <ul\r\n                    className={\r\n                      address.length > 0\r\n                        ? \"loc-results is--visible\"\r\n                        : \"loc-results\"\r\n                    }\r\n                  >\r\n                    {suggestions.map((suggestion, index) => {\r\n                      const { mainText, secondaryText } =\r\n                        suggestion.formattedSuggestion;\r\n                      const style = {\r\n                        backgroundColor: suggestion.active ? \"#fff\" : \"#f8f6f6\",\r\n                        color: suggestion.active ? \"#111\" : \"#555\",\r\n                        cursor: \"pointer\",\r\n                      };\r\n                      return (\r\n                        <li\r\n                          key={index}\r\n                          {...getSuggestionItemProps(suggestion, { style })}\r\n                        >\r\n                          <p className=\"loc-title\">{mainText}</p>\r\n                          {secondaryText ? (\r\n                            <p className=\"loc-secondary\">{secondaryText}</p>\r\n                          ) : null}\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </animated.div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { getByLatLng } from \"./controllers/openweather/api\";\nimport AppContainer from \"./components/AppContainer\";\nimport AppSidebar from \"./components/AppSidebar\";\nimport AppSearch from \"./components/AppSearch\";\nimport Webfont from \"webfontloader\";\n\nfunction App() {\n  const [latlng, setLatlng] = useState({ lat: 51.5078788, lng: -0.0877321 });\n  const [currCountry, setCurrCountry] = useState(null);\n  const [currWeather, setCurrWeather] = useState(null);\n\n  const handleCurrCountry = async (country) => {\n    await setCurrCountry(country);\n  };\n\n  const handleSetLatlng = async (theData) => {\n    console.log(theData.latlng.lat);\n    await setLatlng({ lat: theData.latlng.lat, lng: theData.latlng.lng });\n    await setCurrCountry(theData.theCountry);\n  };\n\n  // Get Api when latlng state changes\n  useEffect(() => {\n    async function setApiData(lat, lng, theType) {\n      return getByLatLng(lat, lng, theType).then((res) => {\n        console.log(res);\n        setCurrWeather(res);\n      });\n    }\n    if (latlng) {\n      setApiData(latlng.lat, latlng.lng, \"weather\");\n    }\n  }, [latlng]);\n\n  useEffect(() => {\n    Webfont.load({\n      google: {\n        families: [\"Inter\"],\n      },\n    });\n\n    // Ask for Latlong Geolocation\n    if (!navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (pos) {\n        setLatlng({ lat: pos.coords.latitude, lng: pos.coords.longitude });\n      });\n    } else {\n      // Set Default `London` Location\n      setLatlng({ lat: 51.5078788, lng: -0.0877321 });\n    }\n  }, []);\n\n  return (\n    <div className=\"App\" style={{ background: \"#E9F5F9\" }}>\n      <Router>\n        <div className=\"sidebar-container\">\n          <Switch>\n            <Route exact path=\"/\">\n              <AppSidebar\n                passfunction={handleSetLatlng}\n                weatherData={currWeather}\n                currLocation={currCountry}\n                handleCurrCountry={handleCurrCountry}\n              />\n            </Route>\n            <Route exact path=\"/search\">\n              <AppSearch passfunction={handleSetLatlng} />\n            </Route>\n          </Switch>\n        </div>\n        <AppContainer\n          showData={latlng}\n          passlatlng={latlng}\n          weatherData={currWeather}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./scss/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}